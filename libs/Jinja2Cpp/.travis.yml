---
dist: xenial
language: cpp
sudo: required

matrix:
  include:
    -
      compiler: clang
      env: COMPILER='clang++'
      os: osx
      osx_image: xcode9
    -
      compiler: clang
      env: COMPILER='clang++'
      os: osx
      osx_image: xcode10
    -
      compiler: clang
      env: COMPILER='clang++'
      os: osx
      osx_image: xcode11
    -
      addons:
        apt:
          packages:
            - cmake
            - g++-6
            - lcov
          sources:
            - ubuntu-toolchain-r-test
      compiler: gcc
      env: "COMPILER=g++-6 COLLECT_COVERAGE=1"
      os: linux
    -
      addons:
        apt:
          packages:
            - cmake
            - clang-8
            - g++-8
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
      compiler: clang
      env: "COMPILER=clang++-8 EXTRA_FLAGS=-DJINJA2CPP_CXX_STANDARD=17 SANITIZE_BUILD=address+undefined"
      os: linux
before_install:
  - "date -u"
  - "uname -a"
script: ./scripts/build.sh
after_success:
  - "if [[ \"${COLLECT_COVERAGE}\" != \"\" ]]; then echo \"Uploading code coverate report\" ; fi"
  - "if [[ \"${COLLECT_COVERAGE}\" != \"\" ]]; then lcov --directory . --capture --output-file coverage.info ; fi"
  - "if [[ \"${COLLECT_COVERAGE}\" != \"\" ]]; then lcov --remove coverage.info '/usr/*' --output-file coverage.info ; fi"
  - "if [[ \"${COLLECT_COVERAGE}\" != \"\" ]]; then lcov --list coverage.info ; fi"
  - "if [[ \"${COLLECT_COVERAGE}\" != \"\" ]]; then bash <(curl -s https://codecov.io/bash) -t \"225d6d7a-2b71-4dbe-bf87-fbf75eb7c119\" || echo \"Codecov did not collect coverage reports\"; fi"
